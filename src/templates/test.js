// Test configuration for each subject
const testConfig = {
    math: {
        title: "B√†i ki·ªÉm tra To√°n h·ªçc",
        time: 30,
        questions: 15
    },
    physics: {
        title: "B√†i ki·ªÉm tra V·∫≠t l√Ω",
        time: 25,
        questions: 12
    },
    chemistry: {
        title: "B√†i ki·ªÉm tra H√≥a h·ªçc",
        time: 35,
        questions: 18
    },
    english: {
        title: "B√†i ki·ªÉm tra Ti·∫øng Anh",
        time: 40,
        questions: 20
    },
    literature: {
        title: "B√†i ki·ªÉm tra VƒÉn h·ªçc",
        time: 45,
        questions: 10
    }
};

let currentTest = null;
let timer = null;
let timeRemaining = 0;

function openSubjectTest(subject) {
    if (!isLoggedIn()) {
        alert('Vui l√≤ng ƒëƒÉng nh·∫≠p ƒë·ªÉ l√†m b√†i ki·ªÉm tra!');
        return;
    }

    const config = testConfig[subject];
    if (!config) return;

    currentTest = subject;
    document.getElementById('testTitle').textContent = config.title;
    document.getElementById('testTime').textContent = config.time;
    document.getElementById('testQuestions').textContent = config.questions;
    timeRemaining = config.time * 60;
    updateTimerDisplay();

    // Load test questions
    loadTestQuestions(subject);

    // Show modal
    document.getElementById('testModal').style.display = 'block';

    // Start timer
    startTimer();
}

function loadTestQuestions(subject) {
    // L·∫•y container ƒë·ªÉ hi·ªÉn th·ªã c√¢u h·ªèi trong modal c·ªßa AI.html
    const questionsContainer = document.getElementById('testContent'); // ID n√†y c·∫ßn kh·ªõp v·ªõi AI.html
    questionsContainer.innerHTML = ''; // X√≥a n·ªôi dung c≈©

    // L·∫•y d·ªØ li·ªáu quiz d·ª±a tr√™n m√¥n h·ªçc t·ª´ quizData (ƒë√£ sao ch√©p t·ª´ test.html v√† ƒë·∫∑t ·ªü cu·ªëi file test.js)
    const quiz = quizData[subject];
    if (!quiz) {
        console.error('Kh√¥ng t√¨m th·∫•y d·ªØ li·ªáu b√†i ki·ªÉm tra cho m√¥n h·ªçc:', subject);
        // C√≥ th·ªÉ hi·ªÉn th·ªã th√¥ng b√°o l·ªói cho ng∆∞·ªùi d√πng n·∫øu c·∫ßn
        return;
    }

    // L∆∞u d·ªØ li·ªáu quiz hi·ªán t·∫°i v√† userAnswers (s·ª≠ d·ª•ng bi·∫øn global ƒë√£ khai b√°o)
    currentQuiz = quiz;
    userAnswers = {};
    
    // C·∫≠p nh·∫≠t th√¥ng tin quiz trong header modal c·ªßa AI.html (ID c·∫ßn kh·ªõp)
    document.getElementById('testTitle').textContent = quiz.title; // ID: testTitle trong AI.html
    document.getElementById('testTime').textContent = quiz.duration; // ID: testTime trong AI.html, ch·ªâ ƒë·∫∑t gi√° tr·ªã s·ªë
    document.getElementById('testQuestions').textContent = quiz.questions.length; // ID: testQuestions trong AI.html
    
    // B·∫Øt ƒë·∫ßu timer khi t·∫£i c√¢u h·ªèi (h√†m startTimer ƒë√£ ƒë∆∞·ª£c sao ch√©p v√† ƒëi·ªÅu ch·ªânh ID timer)
    startTimer(quiz.duration);

    // Hi·ªÉn th·ªã ph·∫ßn quiz v√† ·∫©n ph·∫ßn k·∫øt qu·∫£ khi b·∫Øt ƒë·∫ßu b√†i m·ªõi
    document.getElementById('testContent').style.display = 'block';
    document.getElementById('testResultContent').style.display = 'none'; // testResultContent l√† ID t√¥i ƒë·ªÅ xu·∫•t th√™m v√†o AI.html modal
    document.getElementById('testTimer').style.display = 'block';
    document.getElementById('submitTestButton').style.display = 'block';

    // T·∫°o v√† hi·ªÉn th·ªã HTML cho t·ª´ng c√¢u h·ªèi d·ª±a tr√™n c·∫•u tr√∫c t·ª´ test.html
    quiz.questions.forEach((q, index) => {
        const questionDiv = document.createElement('div');
        questionDiv.className = 'question'; // S·ª≠ d·ª•ng class t·ª´ test.html CSS
        
        let optionsHtml = q.options.map((option, optIndex) => `
            <label class="option" onclick="selectAnswer(${index}, ${optIndex})">
                <input type="radio" name="question${index}" value="${optIndex}">
                <span>${option}</span>
            </label>
        `).join('');

        questionDiv.innerHTML = `
            <div class="question-number">C√¢u ${index + 1}:</div>
            <div class="question-text">${q.question}</div>
            <div class="options">
                ${optionsHtml}
            </div>
        `;
        
        questionsContainer.appendChild(questionDiv);
    });

    // N√∫t n·ªôp b√†i ƒë√£ ƒë∆∞·ª£c hi·ªÉn th·ªã ·ªü tr√™n
}

// H√†m selectAnswer (ƒë√£ sao ch√©p t·ª´ test.html), th√™m c·∫≠p nh·∫≠t giao di·ªán tr·ª±c quan
function selectAnswer(questionIndex, optionIndex) {
    userAnswers[questionIndex] = optionIndex;
    
    // L·∫•y t·∫•t c·∫£ c√°c t√πy ch·ªçn cho c√¢u h·ªèi n√†y
    const options = document.querySelectorAll(`label.option input[name="question${questionIndex}"]`);
    
    options.forEach((radio, index) => {
        const optionLabel = radio.closest('label.option');
        if (index === optionIndex) {
            radio.checked = true;
            optionLabel.classList.add('selected'); // Th√™m class 'selected' cho t√πy ch·ªçn ƒë∆∞·ª£c ch·ªçn
        } else {
            radio.checked = false;
            optionLabel.classList.remove('selected'); // X√≥a class 'selected' kh·ªèi c√°c t√πy ch·ªçn kh√°c
        }
    });

    // C·∫≠p nh·∫≠t giao di·ªán radio button (t√πy ch·ªçn c≈©)
    // const options = document.querySelectorAll(`input[name="question${questionIndex}"]`);\n    // options.forEach((radio, index) => {\n    //     radio.checked = (index === optionIndex);\n    // });\n}
}

// Sao ch√©p h√†m startTimer t·ª´ test.html, ƒëi·ªÅu ch·ªânh ID timer
function startTimer(minutes) {
    // Clear existing timer if any
    if (timerInterval) {
        clearInterval(timerInterval);
    }
    
    timeLeft = minutes * 60;
    updateTimerDisplay();
    
    timerInterval = setInterval(() => {
        timeLeft--;
        updateTimerDisplay();
        
        if (timeLeft <= 0) {
            clearInterval(timerInterval);
            submitTest(); // G·ªçi h√†m submitTest trong test.js
        }
    }, 1000);
}

// Sao ch√©p h√†m updateTimerDisplay t·ª´ test.html, ƒëi·ªÅu ch·ªânh ID timer
function updateTimerDisplay() {
    const minutes = Math.floor(timeLeft / 60);
    const seconds = timeLeft % 60;
    // C·∫≠p nh·∫≠t ph·∫ßn t·ª≠ th·ªùi gian c√≤n l·∫°i trong AI.html (ID c·∫ßn kh·ªõp)
    const timerElement = document.getElementById('timeRemaining'); // ID: timeRemaining trong AI.html
    if (timerElement) {
        timerElement.textContent = 
            `${minutes.toString().padStart(2, '0')}:${seconds.toString().padStart(2, '0')}`;
    }
}

// Sao ch√©p h√†m submitQuiz t·ª´ test.html, ƒë·ªïi t√™n th√†nh submitTest v√† ƒëi·ªÅu ch·ªânh ID k·∫øt qu·∫£
function submitTest() {
    clearInterval(timerInterval);
    
    // T√≠nh ƒëi·ªÉm
    let correctAnswers = 0;
    const totalQuestions = currentQuiz.questions.length;
    
    // Hi·ªÉn th·ªã k·∫øt qu·∫£ chi ti·∫øt (ƒë·∫£m b·∫£o ID container kh·ªõp v·ªõi AI.html)
    const detailedContainer = document.getElementById('testResultContent'); // ID: testResultContent trong AI.html
    detailedContainer.innerHTML = '';
    
    currentQuiz.questions.forEach((q, index) => {
        const userAnswer = userAnswers[index];
        // S·ª≠ d·ª•ng q.correct l√† index c·ªßa ƒë√°p √°n ƒë√∫ng
        const isCorrect = userAnswer === q.correct;
        
        if (isCorrect) {
            correctAnswers++;
        }
        
        const resultDiv = document.createElement('div');
        resultDiv.className = 'question'; // S·ª≠ d·ª•ng l·∫°i class question cho m·ª•c k·∫øt qu·∫£ chi ti·∫øt
        resultDiv.innerHTML = `
            <div class="question-number">C√¢u ${index + 1}:</div>
            <div class="question-text">${q.question}</div>
            <div class="options">
                ${q.options.map((option, optIndex) => {
                    let className = 'option';
                    if (optIndex === q.correct) {
                        className += ' correct'; // Class correct t·ª´ test.html
                    } else if (optIndex === userAnswer && userAnswer !== q.correct) {
                        className += ' incorrect user-selected'; // Class incorrect v√† user-selected t·ª´ test.html
                    } else if (optIndex === userAnswer) {
                         className += ' user-selected'; // Class user-selected t·ª´ test.html
                    }
                    
                    return `
                        <div class="${className}">
                            <span>${option}</span>
                            ${optIndex === q.correct ? ' ‚úì' : ''}
                            ${optIndex === userAnswer && userAnswer !== q.correct ? ' ‚úó' : ''}
                        </div>
                    `;
                }).join('')}
            </div>
            ${!isCorrect && q.explanation ? `
                <div class="explanation">
                    <div class="explanation-title">üí° Gi·∫£i th√≠ch:</div>
                    <div class="explanation-content">${q.explanation}</div>
                </div>
            ` : ''}
        `;
        detailedContainer.appendChild(resultDiv);
    });
    
    // C·∫≠p nh·∫≠t t·ªïng k·∫øt ƒëi·ªÉm (ƒë·∫£m b·∫£o ID kh·ªõp v·ªõi AI.html)
    // AI.html modal kh√¥ng c√≥ ph·∫ßn score-summary ri√™ng nh∆∞ test.html, s·∫Ω hi·ªÉn th·ªã trong testResultContent
    // C·∫ßn t·∫°o HTML cho ph·∫ßn t·ªïng k·∫øt ƒëi·ªÉm v√† ch√®n v√†o ƒë·∫ßu testResultContent
    const scoreSummaryHtml = `
        <div class="score-summary">
            <div class="score-title">K·∫øt qu·∫£ b√†i ki·ªÉm tra</div>
            <div class="score-value" id="scoreValue">${correctAnswers}/${totalQuestions}</div>
            <div class="score-details">
                <div class="score-item">
                    <div id="correctCount">${correctAnswers}</div>
                    <div>ƒê√∫ng</div>
                </div>
                <div class="score-item">
                    <div id="incorrectCount">${totalQuestions - correctAnswers}</div>
                    <div>Sai</div>
                </div>
                <div class="score-item">
                    <div id="scorePercentage">${Math.round((correctAnswers / totalQuestions) * 100)}%</div>
                    <div>ƒêi·ªÉm</div>
                </div>
            </div>
        </div>
    `;
    detailedContainer.innerHTML = scoreSummaryHtml + detailedContainer.innerHTML; // Ch√®n t·ªïng k·∫øt l√™n ƒë·∫ßu

    // ·∫®n ph·∫ßn quiz v√† hi·ªÉn th·ªã ph·∫ßn k·∫øt qu·∫£ (ƒë·∫£m b·∫£o ID kh·ªõp v·ªõi AI.html)
    // AI.html modal c√≥ th·ªÉ kh√¥ng d√πng quizSection/resultsSection, c·∫ßn ƒëi·ªÅu ch·ªânh display c·ªßa testContent v√† testResultContent
    document.getElementById('testContent').style.display = 'none'; // ID testContent c·ªßa AI.html
    document.getElementById('submitTestButton').style.display = 'none'; // ID submitTestButton c·ªßa AI.html
    document.getElementById('testTimer').style.display = 'none'; // ID testTimer c·ªßa AI.html
    document.getElementById('testResultContent').style.display = 'block'; // ID testResultContent c·ªßa AI.html

    // Th√™m n√∫t l√†m l·∫°i b√†i ki·ªÉm tra (t√πy ch·ªçn, test.html c√≥ n√∫t n√†y)
    // C·∫ßn th√™m n√∫t n√†y v√†o AI.html ho·∫∑c t·∫°o ƒë·ªông ·ªü ƒë√¢y
    // V√≠ d·ª• t·∫°o ƒë·ªông:
    const restartBtn = document.createElement('button');
    restartBtn.textContent = 'L√†m l·∫°i b√†i ki·ªÉm tra';
    restartBtn.className = 'restart-btn'; // S·ª≠ d·ª•ng class t·ª´ test.html style
    restartBtn.onclick = restartQuiz; // G·ªçi h√†m restartQuiz
    detailedContainer.appendChild(restartBtn); // Th√™m n√∫t v√†o cu·ªëi ph·∫ßn k·∫øt qu·∫£
}

// Sao ch√©p h√†m restartQuiz t·ª´ test.html
function restartQuiz() {
    // ·∫®n ph·∫ßn k·∫øt qu·∫£ v√† hi·ªÉn th·ªã l·∫°i ph·∫ßn quiz (ƒë·∫£m b·∫£o ID kh·ªõp v·ªõi AI.html)
    document.getElementById('testResultContent').style.display = 'none';
    document.getElementById('testContent').style.display = 'block';
    document.getElementById('testTimer').style.display = 'block';
    document.getElementById('submitTestButton').style.display = 'block';
    
    // Reset d·ªØ li·ªáu v√† hi·ªÉn th·ªã l·∫°i c√¢u h·ªèi
    userAnswers = {};
    displayQuestions(); // H√†m n√†y c·∫ßn ƒë∆∞·ª£c ƒëi·ªÅu ch·ªânh ƒë·ªÉ d√πng currentQuiz v√† c·∫≠p nh·∫≠t testContent
    startTimer(currentQuiz.duration); // B·∫Øt ƒë·∫ßu l·∫°i timer
}

// Bi·∫øn global ƒë·ªÉ l∆∞u d·ªØ li·ªáu quiz v√† ƒë√°p √°n
let currentQuiz = null;
let userAnswers = {};
let timerInterval = null;
let timeLeft = 0;

// D·ªØ li·ªáu c√¢u h·ªèi s·∫Ω ƒë∆∞·ª£c ƒë·ªãnh nghƒ©a ·ªü ƒë√¢y ho·∫∑c l·∫•y t·ª´ learningData.js n·∫øu c·∫ßn
// T·∫°m th·ªùi sao ch√©p quizData t·ª´ test.html v√†o ƒë√¢y ƒë·ªÉ test
const quizData = {
    math: {
        title: 'B√†i ki·ªÉm tra To√°n h·ªçc',
        duration: 30,
        questions: [
            {
                question: 'Gi·∫£i ph∆∞∆°ng tr√¨nh: 2x + 5 = 13',
                options: ['x = 3', 'x = 4', 'x = 5', 'x = 6'],
                correct: 1,
                explanation: 'Gi·∫£i: 2x + 5 = 13 ‚Üí 2x = 13 - 5 = 8 ‚Üí x = 8/2 = 4'
            },
            {
                question: 'T√≠nh ƒë·∫°o h√†m c·ªßa h√†m s·ªë f(x) = x¬≤ + 3x - 2',
                options: ["f'(x) = 2x + 3", "f'(x) = x + 3", "f'(x) = 2x - 3", "f'(x) = 2x + 6"],
                correct: 0,
                explanation: "√Åp d·ª•ng quy t·∫Øc ƒë·∫°o h√†m: (x¬≤)' = 2x, (3x)' = 3, (h·∫±ng s·ªë)' = 0"
            },
            {
                question: 'Trong tam gi√°c vu√¥ng, n·∫øu m·ªôt c·∫°nh g√≥c vu√¥ng d√†i 3cm v√† c·∫°nh huy·ªÅn d√†i 5cm, c·∫°nh g√≥c vu√¥ng c√≤n l·∫°i d√†i bao nhi√™u?',
                options: ['4cm', '6cm', '7cm', '8cm'],
                correct: 0,
                explanation: '√Åp d·ª•ng ƒë·ªãnh l√Ω Pythagoras: a¬≤ + b¬≤ = c¬≤ ‚Üí 3¬≤ + b¬≤ = 5¬≤ ‚Üí b¬≤ = 25 - 9 = 16 ‚Üí b = 4cm'
            },
            {
                question: 'Gi√° tr·ªã c·ªßa log‚ÇÇ(8) l√† bao nhi√™u?',
                options: ['2', '3', '4', '8'],
                correct: 1,
                explanation: 'log‚ÇÇ(8) = log‚ÇÇ(2¬≥) = 3 √ó log‚ÇÇ(2) = 3 √ó 1 = 3'
            },
            {
                question: 'T·ªïng c·ªßa d√£y s·ªë c·ªông: 2, 5, 8, 11, ..., 29 l√† bao nhi√™u?',
                options: ['155', '160', '165', '170'],
                correct: 0,
                explanation: 'D√£y c√≥ c√¥ng sai d=3, s·ªë h·∫°ng ƒë·∫ßu a‚ÇÅ=2, s·ªë h·∫°ng cu·ªëi a‚ÇÅ‚ÇÄ=29. T·ªïng S‚ÇÅ‚ÇÄ = 10√ó(2+29)/2 = 155'
            },
            {
                question: 'T√¨m nghi·ªám c·ªßa ph∆∞∆°ng tr√¨nh b·∫≠c hai: x¬≤ - 5x + 6 = 0',
                options: ['x = 2 v√† x = 3', 'x = -2 v√† x = -3', 'x = 1 v√† x = 6', 'x = -1 v√† x = -6'],
                correct: 0,
                explanation: 'Gi·∫£i: x¬≤ - 5x + 6 = 0 ‚Üí (x-2)(x-3) = 0 ‚Üí x = 2 ho·∫∑c x = 3'
            },
            {
                question: 'T√≠nh t√≠ch ph√¢n: ‚à´(2x + 3)dx',
                options: ['x¬≤ + 3x + C', '2x¬≤ + 3x + C', 'x¬≤ + 3', '2x¬≤ + 3'],
                correct: 0,
                explanation: '‚à´(2x + 3)dx = x¬≤ + 3x + C, v·ªõi C l√† h·∫±ng s·ªë t√≠ch ph√¢n'
            },
            {
                question: 'Trong kh√¥ng gian Oxyz, kho·∫£ng c√°ch t·ª´ ƒëi·ªÉm M(1,2,3) ƒë·∫øn m·∫∑t ph·∫≥ng (P): 2x + y - z + 1 = 0 l√†:',
                options: ['‚àö6', '2‚àö6', '3‚àö6', '4‚àö6'],
                correct: 1,
                explanation: '√Åp d·ª•ng c√¥ng th·ª©c kho·∫£ng c√°ch t·ª´ ƒëi·ªÉm ƒë·∫øn m·∫∑t ph·∫≥ng: d = |2(1) + 1(2) - 1(3) + 1|/‚àö(2¬≤ + 1¬≤ + (-1)¬≤) = 2/‚àö6 = 2‚àö6'
            }
        ]
    },
    physics: {
        title: 'B√†i ki·ªÉm tra V·∫≠t l√Ω',
        duration: 25,
        questions: [
            {
                question: 'C√¥ng th·ª©c t√≠nh v·∫≠n t·ªëc trong chuy·ªÉn ƒë·ªông th·∫≥ng ƒë·ªÅu l√† g√¨?',
                options: ['v = s/t', 'v = at', 'v = s√ót', 'v = a/t'],
                correct: 0,
                explanation: 'Trong chuy·ªÉn ƒë·ªông th·∫≥ng ƒë·ªÅu, v·∫≠n t·ªëc = qu√£ng ƒë∆∞·ªùng / th·ªùi gian: v = s/t'
            },
            {
                question: 'ƒê∆°n v·ªã ƒëo l·ª±c trong h·ªá SI l√† g√¨?',
                options: ['Kilogram (kg)', 'Newton (N)', 'Joule (J)', 'Watt (W)'],
                correct: 1,
                explanation: 'Newton (N) l√† ƒë∆°n v·ªã ƒëo l·ª±c trong h·ªá ƒëo l∆∞·ªùng qu·ªëc t·∫ø SI'
            },
            {
                question: 'ƒê·ªãnh lu·∫≠t II Newton ƒë∆∞·ª£c ph√°t bi·ªÉu nh∆∞ th·∫ø n√†o?',
                options: ['F = ma', 'F = mv', 'F = m/a', 'F = a/m'],
                correct: 0,
                explanation: 'ƒê·ªãnh lu·∫≠t II Newton: L·ª±c t√°c d·ª•ng l√™n v·∫≠t b·∫±ng kh·ªëi l∆∞·ª£ng nh√¢n v·ªõi gia t·ªëc: F = ma'
            },
            {
                question: 'C√¥ng th·ª©c t√≠nh c√¥ng c∆° h·ªçc l√†:',
                options: ['A = F.s', 'A = F/s', 'A = F-s', 'A = F+s'],
                correct: 0,
                explanation: 'C√¥ng c∆° h·ªçc ƒë∆∞·ª£c t√≠nh b·∫±ng t√≠ch c·ªßa l·ª±c v√† qu√£ng ƒë∆∞·ªùng d·ªãch chuy·ªÉn: A = F.s'
            },
            {
                question: 'ƒê·ªãnh lu·∫≠t b·∫£o to√†n nƒÉng l∆∞·ª£ng ph√°t bi·ªÉu r·∫±ng:',
                options: ['NƒÉng l∆∞·ª£ng kh√¥ng t·ª± sinh ra ho·∫∑c m·∫•t ƒëi', 'NƒÉng l∆∞·ª£ng c√≥ th·ªÉ t·ª± sinh ra', 'NƒÉng l∆∞·ª£ng c√≥ th·ªÉ m·∫•t ƒëi', 'NƒÉng l∆∞·ª£ng lu√¥n tƒÉng'],
                correct: 0,
                explanation: 'ƒê·ªãnh lu·∫≠t b·∫£o to√†n nƒÉng l∆∞·ª£ng: NƒÉng l∆∞·ª£ng kh√¥ng t·ª± sinh ra ho·∫∑c m·∫•t ƒëi, m√† ch·ªâ chuy·ªÉn t·ª´ d·∫°ng n√†y sang d·∫°ng kh√°c'
            },
            {
                question: 'Hi·ªáu ƒëi·ªán th·∫ø gi·ªØa hai ƒëi·ªÉm trong m·∫°ch ƒëi·ªán ƒë∆∞·ª£c t√≠nh b·∫±ng:',
                options: ['U = I.R', 'U = I/R', 'U = R/I', 'U = I+R'],
                correct: 0,
                explanation: 'Theo ƒë·ªãnh lu·∫≠t Ohm, hi·ªáu ƒëi·ªán th·∫ø b·∫±ng t√≠ch c·ªßa c∆∞·ªùng ƒë·ªô d√≤ng ƒëi·ªán v√† ƒëi·ªán tr·ªü: U = I.R'
            }
        ]
    },
    chemistry: {
        title: 'B√†i ki·ªÉm tra H√≥a h·ªçc',
        duration: 35,
        questions: [
            {
                question: 'C√¥ng th·ª©c h√≥a h·ªçc c·ªßa n∆∞·ªõc l√† g√¨?',
                options: ['H‚ÇÇO', 'CO‚ÇÇ', 'NaCl', 'CH‚ÇÑ'],
                correct: 0,
                explanation: 'N∆∞·ªõc c√≥ c√¥ng th·ª©c h√≥a h·ªçc l√† H‚ÇÇO (2 nguy√™n t·ª≠ Hydrogen + 1 nguy√™n t·ª≠ Oxygen)'
            },
            {
                question: 'Nguy√™n t·ªë n√†o c√≥ k√Ω hi·ªáu h√≥a h·ªçc l√† "Au"?',
                options: ['B·∫°c', 'V√†ng', 'ƒê·ªìng', 'S·∫Øt'],
                correct: 1,
                explanation: 'Au l√† k√Ω hi·ªáu h√≥a h·ªçc c·ªßa v√†ng (t·ª´ ti·∫øng Latin "aurum")'
            },
            {
                question: 'Ph·∫£n ·ª©ng n√†o sau ƒë√¢y l√† ph·∫£n ·ª©ng oxi h√≥a kh·ª≠?',
                options: ['2H‚ÇÇ + O‚ÇÇ ‚Üí 2H‚ÇÇO', 'NaCl + AgNO‚ÇÉ ‚Üí AgCl + NaNO‚ÇÉ', 'CaO + H‚ÇÇO ‚Üí Ca(OH)‚ÇÇ', 'NH‚ÇÉ + HCl ‚Üí NH‚ÇÑCl'],
                correct: 0,
                explanation: '2H‚ÇÇ + O‚ÇÇ ‚Üí 2H‚ÇÇO l√† ph·∫£n ·ª©ng oxi h√≥a kh·ª≠ v√¨ c√≥ s·ª± thay ƒë·ªïi s·ªë oxi h√≥a c·ªßa H v√† O'
            },
            {
                question: 'Dung d·ªãch c√≥ pH = 7 l√†:',
                options: ['Trung t√≠nh', 'Axit', 'Baz∆°', 'Kh√¥ng x√°c ƒë·ªãnh'],
                correct: 0,
                explanation: 'Dung d·ªãch c√≥ pH = 7 l√† trung t√≠nh, pH < 7 l√† axit, pH > 7 l√† baz∆°'
            },
            {
                question: 'C√¥ng th·ª©c h√≥a h·ªçc c·ªßa axit sunfuric l√†:',
                options: ['H‚ÇÇSO‚ÇÑ', 'HCl', 'HNO‚ÇÉ', 'H‚ÇÉPO‚ÇÑ'],
                correct: 0,
                explanation: 'Axit sunfuric c√≥ c√¥ng th·ª©c h√≥a h·ªçc l√† H‚ÇÇSO‚ÇÑ'
            },
            {
                question: 'Nguy√™n t·ªë n√†o sau ƒë√¢y l√† kim lo·∫°i ki·ªÅm?',
                options: ['Na', 'Ca', 'Fe', 'Cu'],
                correct: 0,
                explanation: 'Na (Natri) l√† kim lo·∫°i ki·ªÅm, thu·ªôc nh√≥m IA trong b·∫£ng tu·∫ßn ho√†n'
            }
        ]
    },
    english: {
        title: 'B√†i ki·ªÉm tra Ti·∫øng Anh',
        duration: 40,
        questions: [
            {
                question: 'Choose the correct form: "She _____ to school every day."',
                options: ['has been', 'is', 'was', 'were'],
                correct: 0,
                explanation: 'Present Perfect Continuous is used for actions that started in the past and continue to the present'
            },
            {
                question: 'Which word is a synonym of "happy"?',
                options: ['Joyful', 'Sad', 'Angry', 'Tired'],
                correct: 0,
                explanation: 'Joyful means feeling or expressing great happiness'
            },
            {
                question: 'Choose the correct preposition: "I am interested _____ learning English."',
                options: ['in', 'on', 'at', 'for'],
                correct: 0,
                explanation: 'The correct preposition after "interested" is "in"'
            },
            {
                question: 'Which sentence is grammatically correct?',
                options: ['If I were you, I would study harder', 'If I was you, I would study harder', 'If I am you, I would study harder', 'If I be you, I would study harder'],
                correct: 0,
                explanation: 'In conditional sentences type 2, we use "were" for all persons in the if-clause'
            },
            {
                question: 'Choose the correct phrasal verb: "Please _____ your shoes before entering the house."',
                options: ['take off', 'take on', 'take in', 'take up'],
                correct: 0,
                explanation: '"Take off" means to remove something, especially clothes'
            },
            {
                question: 'Which word is an antonym of "begin"?',
                options: ['End', 'Start', 'Continue', 'Proceed'],
                correct: 0,
                explanation: 'End is the opposite of begin, meaning to bring something to a conclusion'
            }
        ]
    },
    literature: {
        title: 'B√†i ki·ªÉm tra VƒÉn h·ªçc',
        duration: 45,
        questions: [
            {
                question: 'T√°c ph·∫©m "T·∫Øt ƒë√®n" c·ªßa nh√† vƒÉn n√†o?',
                options: ['Ng√¥ T·∫•t T·ªë', 'Nam Cao', 'V≈© Tr·ªçng Ph·ª•ng', 'Nguy·ªÖn C√¥ng Hoan'],
                correct: 0,
                explanation: 'T·∫Øt ƒë√®n l√† ti·ªÉu thuy·∫øt c·ªßa nh√† vƒÉn Ng√¥ T·∫•t T·ªë, xu·∫•t b·∫£n nƒÉm 1939'
            },
            {
                question: 'Th·ªÉ th∆° c·ªßa b√†i th∆° "T√¢y Ti·∫øn" l√†:',
                options: ['Th·∫•t ng√¥n', 'L·ª•c b√°t', 'Song th·∫•t l·ª•c b√°t', 'T·ª± do'],
                correct: 0,
                explanation: 'B√†i th∆° T√¢y Ti·∫øn c·ªßa Quang D≈©ng ƒë∆∞·ª£c vi·∫øt theo th·ªÉ th∆° th·∫•t ng√¥n'
            },
            {
                question: 'T√°c ph·∫©m "Ch√≠ Ph√®o" c·ªßa nh√† vƒÉn n√†o?',
                options: ['Nam Cao', 'Ng√¥ T·∫•t T·ªë', 'V≈© Tr·ªçng Ph·ª•ng', 'Nguy·ªÖn C√¥ng Hoan'],
                correct: 0,
                explanation: 'Ch√≠ Ph√®o l√† truy·ªán ng·∫Øn c·ªßa nh√† vƒÉn Nam Cao, xu·∫•t b·∫£n nƒÉm 1941'
            },
            {
                question: 'B√†i th∆° "ƒê√¢y th√¥n Vƒ© D·∫°" c·ªßa H√†n M·∫∑c T·ª≠ ƒë∆∞·ª£c vi·∫øt theo th·ªÉ th∆°:',
                options: ['Th·∫•t ng√¥n', 'L·ª•c b√°t', 'Song th·∫•t l·ª•c b√°t', 'T·ª± do'],
                correct: 0,
                explanation: 'B√†i th∆° ƒê√¢y th√¥n Vƒ© D·∫° ƒë∆∞·ª£c vi·∫øt theo th·ªÉ th∆° th·∫•t ng√¥n'
            },
            {
                question: 'T√°c ph·∫©m "S·ªë ƒë·ªè" c·ªßa nh√† vƒÉn n√†o?',
                options: ['V≈© Tr·ªçng Ph·ª•ng', 'Nam Cao', 'Ng√¥ T·∫•t T·ªë', 'Nguy·ªÖn C√¥ng Hoan'],
                correct: 0,
                explanation: 'S·ªë ƒë·ªè l√† ti·ªÉu thuy·∫øt c·ªßa nh√† vƒÉn V≈© Tr·ªçng Ph·ª•ng, xu·∫•t b·∫£n nƒÉm 1936'
            },
            {
                question: 'Th·ªÉ lo·∫°i c·ªßa t√°c ph·∫©m "Truy·ªán Ki·ªÅu" l√†:',
                options: ['Truy·ªán th∆°', 'Ti·ªÉu thuy·∫øt', 'Truy·ªán ng·∫Øn', 'K·ªãch'],
                correct: 0,
                explanation: 'Truy·ªán Ki·ªÅu l√† m·ªôt truy·ªán th∆° N√¥m c·ªßa Nguy·ªÖn Du, vi·∫øt b·∫±ng th·ªÉ l·ª•c b√°t'
            }
        ]
    }
};

// X·ª≠ l√Ω ƒë√°p √°n
function handleAnswer(questionId, answer) {
    const test = JSON.parse(localStorage.getItem('currentTest'));
    test.userAnswers[questionId] = answer;
    localStorage.setItem('currentTest', JSON.stringify(test));
}

// L·∫•y t√™n m√¥n h·ªçc
function getSubjectName(subject) {
    const names = {
        math: 'To√°n h·ªçc',
        physics: 'V·∫≠t l√Ω',
        chemistry: 'H√≥a h·ªçc',
        english: 'Ti·∫øng Anh',
        literature: 'VƒÉn h·ªçc'
    };
    return names[subject] || subject;
}

// Th√™m style cho b√†i ki·ªÉm tra
const testStyle = document.createElement('style');
testStyle.textContent = `
    .question-container {
        background: #fff;
        border-radius: 10px;
        padding: 20px;
        margin-bottom: 20px;
        box-shadow: 0 2px 4px rgba(0,0,0,0.1);
    }

    .question-header {
        margin-bottom: 15px;
    }

    .question-number {
        font-weight: bold;
        color: #3498db; /* M√†u xanh */
        margin-bottom: 10px;
        font-size: 18px; /* C·ª° ch·ªØ b·∫°n mu·ªën */
    }

    .question-text {
        font-size: 1.1em;
        color: #333;
    }

    .options-container {
        display: flex;
        flex-direction: column;
        gap: 10px;
    }

    .option {
        display: flex;
        align-items: center;
        padding: 10px;
        border: 1px solid #e0e0e0;
        border-radius: 5px;
        cursor: pointer;
        transition: all 0.3s ease;
    }

    .option:hover {
        background: #f5f5f5;
    }

    .option input[type="radio"] {
        margin-right: 10px;
    }

    .test-result {
        padding: 20px;
    }

    .result-details {
        background: #f8f9fa;
        padding: 20px;
        border-radius: 10px;
        margin-bottom: 20px;
    }

    .answer-item {
        background: #fff;
        padding: 15px;
        border-radius: 8px;
        margin-bottom: 15px;
        border-left: 4px solid #e0e0e0;
    }

    .answer-item.correct {
        border-left-color: #28a745;
    }

    .answer-item.incorrect {
        border-left-color: #dc3545;
    }

    .explanation {
        color: #666;
        font-style: italic;
        margin-top: 10px;
    }

    /* Style for selected option */
    .option.selected {
        background: #e0f7fa; /* N·ªÅn xanh d∆∞∆°ng nh·∫°t */
        border-color: #00bcd4; /* Vi·ªÅn xanh d∆∞∆°ng */
        font-weight: bold; /* Ch·ªØ ƒë·∫≠m */
    }
`;
document.head.appendChild(testStyle); 